(window.webpackJsonp=window.webpackJsonp||[]).push([[422],{897:function(t,e,v){"use strict";v.r(e);var s=v(35),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"operators"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#operators"}},[t._v("#")]),t._v(" Operators")]),t._v(" "),v("p",[t._v("Nushell supports the following operators:")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("Operator")]),t._v(" "),v("th",[t._v("Description")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[v("code",[t._v("+")])]),t._v(" "),v("td",[t._v("add")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("-")])]),t._v(" "),v("td",[t._v("subtract")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("*")])]),t._v(" "),v("td",[t._v("multiply")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("/")])]),t._v(" "),v("td",[t._v("divide")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("**")])]),t._v(" "),v("td",[t._v("exponentiation (power)")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("mod")])]),t._v(" "),v("td",[t._v("modulo")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("==")])]),t._v(" "),v("td",[t._v("equal")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("!=")])]),t._v(" "),v("td",[t._v("not equal")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("<")])]),t._v(" "),v("td",[t._v("less than")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("<=")])]),t._v(" "),v("td",[t._v("less than or equal")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v(">")])]),t._v(" "),v("td",[t._v("greater than")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v(">=")])]),t._v(" "),v("td",[t._v("greater than or equal")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("=~")])]),t._v(" "),v("td",[t._v("string contains another")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("!~")])]),t._v(" "),v("td",[t._v("string does not contain another")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("in")])]),t._v(" "),v("td",[t._v("value in list")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("not-in")])]),t._v(" "),v("td",[t._v("value not in list")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("&&")])]),t._v(" "),v("td",[t._v("and two Boolean values")])]),t._v(" "),v("tr",[v("td",[v("code",[t._v("||")])]),t._v(" "),v("td",[t._v("or two Boolean values")])])])]),t._v(" "),v("p",[t._v("Parentheses can be used for grouping to specify evaluation order or for calling commands and using the results in an expression.")]),t._v(" "),v("p",[t._v("Commands that take a boolean expression, such as\n"),v("code",[t._v("where")]),t._v(", "),v("code",[t._v("keep while")]),t._v(", "),v("code",[t._v("keep until")]),t._v(", "),v("code",[t._v("skip while")]),t._v(", and "),v("code",[t._v("skip until")]),t._v(",\nare automatically evaluated in shorthand math mode.")]),t._v(" "),v("p",[t._v("For example, "),v("code",[t._v("let a = 2; let b = 3; $a * $b")]),t._v(" outputs "),v("code",[t._v("6")]),t._v(".")]),t._v(" "),v("h2",{attrs:{id:"case-sensitivity"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#case-sensitivity"}},[t._v("#")]),t._v(" Case Sensitivity")]),t._v(" "),v("p",[t._v("Operators are always case-sensitive when operating on strings. In the future Nu may have simpler syntax for case-insensitive operations, but for now you can usually use the "),v("code",[t._v("str")]),t._v(" subcommands (run "),v("code",[t._v("help str")]),t._v(' for a full list). For example, this returns files whose names contain "foo" (case-sensitive):')]),t._v(" "),v("div",{staticClass:"language-nushell extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('ls | where name =~ "foo"\n')])])]),v("p",[t._v("And this will do the same but case-insensitive:")]),t._v(" "),v("div",{staticClass:"language-nushell extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('ls | where ($it.name | str contains --insensitive "foo")\n')])])])])}),[],!1,null,null,null);e.default=a.exports}}]);