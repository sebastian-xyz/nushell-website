(window.webpackJsonp=window.webpackJsonp||[]).push([[407],{866:function(e,t,a){"use strict";a.r(t);var r=a(56),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"creating-your-own-errors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-your-own-errors"}},[e._v("#")]),e._v(" Creating your own errors")]),e._v(" "),a("p",[e._v("Using the "),a("RouterLink",{attrs:{to:"/book/metadata.html"}},[e._v("metadata")]),e._v(" information, you can create your own custom error messages. Error messages are built of multiple parts:")],1),e._v(" "),a("ul",[a("li",[e._v("The title of the error")]),e._v(" "),a("li",[e._v("The label of error message, which includes both the text of the label and the span to underline")])]),e._v(" "),a("p",[e._v("You can use the "),a("code",[e._v("error make")]),e._v(" command to create your own error messages. For example, let's say you had your own command called "),a("code",[e._v("my-command")]),e._v(" and you wanted to give an error back to the caller about something wrong the the parameter that was passed in.")]),e._v(" "),a("p",[e._v("First, you can take the span of where the argument is coming from:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let span = (metadata $x).span;\n")])])]),a("p",[e._v("Next, you can create an error using the "),a("code",[e._v("error make")]),e._v(" command. This command takes in a record that describes the error to create:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('error make {msg: "this is fishy", label: {text: "fish right here", start: $span.start, end: $span.end } }\n')])])]),a("p",[e._v("Together with your custom command, it might look like this:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('def my-command [x] {\n    let span = (metadata $x).span;\n    error make {\n        msg: "this is fishy", \n        label: {\n            text: "fish right here", \n            start: $span.start, \n            end: $span.end \n        } \n    }\n}\n')])])]),a("p",[e._v("When called with a value, we'll now see an error message returned:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("> my-command 100\n\nError: \n  × this is fishy\n   ╭─[entry #5:1:1]\n 1 │ my-command 100\n   ·            ─┬─\n   ·             ╰── fish right here\n   ╰────\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);