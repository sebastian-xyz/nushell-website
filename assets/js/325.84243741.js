(window.webpackJsonp=window.webpackJsonp||[]).push([[325],{809:function(t,e,s){"use strict";s.r(e);var a=s(35),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"frontmatter-title"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "),s("code",[t._v(t._s(t.$frontmatter.title))])]),t._v(" "),s("div",{staticStyle:{"white-space":"pre-wrap"}},[t._v(t._s(t.$frontmatter.usage))]),t._v(" "),s("h2",{attrs:{id:"signature"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#signature"}},[t._v("#")]),t._v(" Signature")]),t._v(" "),s("p",[s("code",[t._v("> register (plugin) (signature) --encoding --shell")])]),t._v(" "),s("h2",{attrs:{id:"parameters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[t._v("#")]),t._v(" Parameters")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("plugin")]),t._v(": path of executable for plugin")]),t._v(" "),s("li",[s("code",[t._v("signature")]),t._v(": Block with signature description as json object")]),t._v(" "),s("li",[s("code",[t._v("--encoding {string}")]),t._v(": Encoding used to communicate with plugin. Options: [capnp, json]")]),t._v(" "),s("li",[s("code",[t._v("--shell {path}")]),t._v(": path of shell used to run plugin (cmd, sh, python, etc)")])]),t._v(" "),s("h2",{attrs:{id:"examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),s("p",[t._v("Register "),s("code",[t._v("nu_plugin_query")]),t._v(" plugin from ~/.cargo/bin/ dir")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" register -e json ~/.cargo/bin/nu_plugin_query\n")])])]),s("p",[t._v("Register "),s("code",[t._v("nu_plugin_query")]),t._v(" plugin from "),s("code",[t._v("nu -c")]),t._v("(plugin will be available in that nu session only)")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" plugin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("((")]),t._v("which nu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".path.0 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" path "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dirname")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" path "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nu_plugin_query'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" nu -c "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("$'register -e json ($plugin); version'")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);