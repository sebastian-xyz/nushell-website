(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{547:function(s,t,a){"use strict";a.r(t);var e=a(35),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("Output ANSI codes to change color.")]),s._v(" "),a("h2",{attrs:{id:"signature"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#signature"}},[s._v("#")]),s._v(" Signature")]),s._v(" "),a("p",[a("code",[s._v("> ansi (code) --escape --osc --list")])]),s._v(" "),a("h2",{attrs:{id:"parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[s._v("#")]),s._v(" Parameters")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("code")]),s._v(": the name of the code to use like 'green' or 'reset' to reset the color")]),s._v(" "),a("li",[a("code",[s._v("--escape")]),s._v(": escape sequence without the escape character(s)")]),s._v(" "),a("li",[a("code",[s._v("--osc")]),s._v(": operating system command (ocs) escape sequence without the escape character(s)")]),s._v(" "),a("li",[a("code",[s._v("--list")]),s._v(": list available ansi code names")])]),s._v(" "),a("h2",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[s._v("#")]),s._v(" Examples")]),s._v(" "),a("p",[s._v("Change color to green")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ansi green\n")])])]),a("p",[s._v("Reset the color")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ansi reset\n")])])]),a("p",[s._v("Use ansi to color text (rb = red bold, gb = green bold, pb = purple bold)")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ansi rb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" Hello "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ansi gb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" Nu "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ansi pb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" World "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ansi reset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" str collect\n")])])]),a("p",[s._v("Use ansi to color text (italic bright yellow on red 'Hello' with green bold 'Nu' and purple bold 'World')")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ansi -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3;93;41m'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" Hello "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ansi reset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ansi gb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" Nu "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ansi pb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" World "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ansi reset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" str collect\n")])])]),a("p",[s._v("Use ansi to color text with a style (blue on red in bold)")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"(ansi -e { fg: '#0000ff' bg: '#ff0000' attr: b })Hello Nu World(ansi reset)\"")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);